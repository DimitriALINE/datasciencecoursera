names(x)
x
class(names(x))
class(names(x))
data <- read.csv("activity/activity.csv", header = TRUE, colClasses = c("numeric", "Date","factor"))
data$interval
levels(data$interval)
x <- data$interval[1:288]
X
x
class(x)
y <- data$interval[1:288]
y
setwd("C:/Users/dimitri/datasciencecoursera/RepData_PeerAssessment1")
data <- read.csv("activity/activity.csv", header = TRUE, colClasses = c("numeric", "Date","numeric"))
head(data)
y <- complete.cases(data)
data2 <- data[y,]
x <- lapply((split(data2$steps,data2$date)),sum)
x <- as.numeric(x)
hist(x)
mean(x)
median(x)
y <- data$interval[1:288]
x <- lapply((split(data2$steps,data2$interval)),mean)
plot(y,x, type = "l")
x
x <- as.numeric(x=)
x <- as.numeric(x)
x
x <- lapply((split(data2$steps,data2$interval)),mean)
x <- as.numeric(x)
names(x)
names(x) <- y
x
max(x)
names(max(x))
names(x[max(x)])
x[max(x)]
x[[max(x)]]
max(x)
z <- max(x)
names(x = max(x))
names(x == max(x))
names(x == z
)
x[x==z]
x[x==max(x)]
y <- complete.cases(data)
y
count(y == TRUE)
sum(is.na(data))
x <- lapply((split(data2$steps,data2$interval)),mean)
x
x <- lapply((split(data2$steps,data2$date)),sum)
x
x <- lapply((split(data$steps,data$date)),sum)
x
x <- lapply((split(data$steps,data$date)),sum(is.na))
x <- lapply((split(data$steps,data$date)),is.na)
x
x <- sum(lapply((split(data$steps,data$date)),is.na))
x <- lapply((lapply((split(data$steps,data$date)),is.na)),sum)
x
data <- read.csv("activity/activity.csv", header = TRUE, colClasses = c("numeric", "Date","numeric"))
x <- lapply((lapply((split(data$steps,data$date)),is.na)),sum)
x
title: "PA1_template"
output: html_document
---
### Loading and preprocessing the data
We load the data and we give a class and a name to the columns.
```{r, echo=TRUE}
setwd("C:/Users/dimitri/datasciencecoursera/RepData_PeerAssessment1")
data <- read.csv("activity/activity.csv", header = TRUE, colClasses = c("numeric", "Date","numeric"))
head(data)
```
### What is mean total number of steps taken per day?
```{r, echo=TRUE}
y <- complete.cases(data)
data2 <- data[y,]
x <- lapply((split(data2$steps,data2$date)),sum)
x <- as.numeric(x)
hist(x)
mean(x)
median(x)
```
### What is the average daily activity pattern?
```{r, echo=TRUE}
y <- data$interval[1:288]
x <- lapply((split(data2$steps,data2$interval)),mean)
x <- as.numeric(x)
plot(y,x, type = "l")
names(x) <- y
x[x==max(x)]
```
### Imputing missing values
```{r, echo=TRUE}
sum(is.na(data))
lapply((lapply((split(data$steps,data$date)),is.na)),sum)
```
### Are there differences in activity patterns between weekdays and weekends?
```{r, echo=TRUE}
```
x
for (i in 1:17568) {}
for (i in 1:17568) { if (is.na(data[i,1]) == TRUE |          }
for (i in 1:17568) { if (is.na(data[i,1]) == TRUE {data[i,1] <- x[i] }          }
f <- lapply((lapply((split(data$steps,data$date)),is.na)),sum)
rep (x, 61)
X <- rep (x, 61)
f <- data[data[i,1] == NA]
f <- data[data[i,1] == NA,]
f <- data[data[i,1] == NA,1]
F
f
f <- data[data[i,1] == NA,]
head(f)
View(data)
for (i in 1:17568) {if (data[i,1] == NA) {data[i,1] <- X[i]}}
for (i in 1:17568) {if (data[i,1] == "NA") {data[i,1] <- X[i]}}
for (i in 1:17568) {if (is.na(data[i,1]) == TRUE) {data[i,1] <- X[i]}}
View(data)
g <- factor(c("weekday","weekend"))
day(data$date)
weekdays(data$date)
g <- weekdays(data$date)
names(g) <- day
names(g) <- "day"
g
h <- weekdays(data$date)
data <- cbind(data,h)
for (i in 1:17568) {if (data[i,5] == ("Sunday"|'Saturday') {data[i,5] <- "weekend"} else {data[i,5] <- "weekday"}}
for (i in 1:17568) {if (data[i,5] == ("Sunday"|"Saturday") {data[i,5] <- "weekend"} else {data[i,5] <- "weekday"}}
for (i in 1:17568) {if ((data[i,5] == "Sunday")| (data[i,5] == ("Saturday")) {data[i,5] <- "weekend"} else {data[i,5] <- "weekday"}}
for (i in 1:17568) {if ((data[i,5] == "Sunday")| (data[i,5] == ("Saturday"))) {data[i,5] <- "weekend"} else {data[i,5] <- "weekday"}}
for (i in 1:17568) {if ((data[i,4] == "Sunday")| (data[i,4] == ("Saturday"))) {data[i,4] <- "weekend"} else {data[i,4] <- "weekday"}}
View(data)
h <- weekdays(data$date)
data <- cbind(data,h)
g <- factor(c("weekday","weekend"))
title: "PA1_template"
output: html_document
---
### Loading and preprocessing the data
We load the data and we give a class and a name to the columns.
```{r, echo=TRUE}
setwd("C:/Users/dimitri/datasciencecoursera/RepData_PeerAssessment1")
data <- read.csv("activity/activity.csv", header = TRUE, colClasses = c("numeric", "Date","numeric"))
head(data)
```
### What is mean total number of steps taken per day?
```{r, echo=TRUE}
y <- complete.cases(data)
data2 <- data[y,]
x <- lapply((split(data2$steps,data2$date)),sum)
x <- as.numeric(x)
hist(x)
mean(x)
median(x)
```
### What is the average daily activity pattern?
```{r, echo=TRUE}
y <- data$interval[1:288]
x <- lapply((split(data2$steps,data2$interval)),mean)
x <- as.numeric(x)
plot(y,x, type = "l")
names(x) <- y
x[x==max(x)]
```
### Imputing missing values
```{r, echo=TRUE}
sum(is.na(data))
lapply((lapply((split(data$steps,data$date)),is.na)),sum)
X <- rep (x, 61)
for (i in 1:17568) {if (is.na(data[i,1]) == TRUE) {data[i,1] <- X[i]}}
z <- lapply((split(data$steps,data$date)),sum)
z <- as.numeric(z)
hist(z)
mean(z)
median(z)
```
### Are there differences in activity patterns between weekdays and weekends?
```{r, echo=TRUE}
g <- factor(c("weekday","weekend"))
h <- weekdays(data$date)
data <- cbind(data,h)
```
for (i in 1:17568) {if ((data[i,4] == "Sunday")| (data[i,4] == "Saturday")) {data[i,4] <- "weekend"} else {data[i,4] <- "weekday"}}
warnings()
View(data)
data[,4] <- h
levels(h) <- c("weekday","weekend")
h
for (i in 1:17568) {if h == "Sunday")|(h| == "Saturday")) {h[i] <- "weekend"} else {data[i,4] <- "weekday"}}
for (i in 1:17568) {if h == "Sunday")|(h| == "Saturday")) {h[i] <- "weekend"} else {h[i] <- "weekday"}}
for (i in 1:17568) {if h[i] == "Sunday")|(h[i] == "Saturday")) {h[i] <- "weekend"} else {h[i] <- "weekday"}}
h <- weekdays(data$date)
for (i in 1:17568) {if h[i] == "Sunday")|(h[i] == "Saturday")) {h[i] <- "weekend"} else {h[i] <- "weekday"}}
for (i in 1:17568) {if ((h[i] == "Sunday")|(h[i] == "Saturday")) {h[i] <- "weekend"} else {h[i] <- "weekday"}}
h
```{r, echo=TRUE}
h <- weekdays(data$date)
h <- factor(c("weekday","weekend"))
for (i in 1:17568) {if ((h[i] == "Sunday")|(h[i] == "Saturday")) {h[i] <- "weekend"} else {h[i] <- "weekday"}}
data <- cbind(data,h)
```
---
title: "PA1_template"
output: html_document
---
### Loading and preprocessing the data
We load the data and we give a class and a name to the columns.
```{r, echo=TRUE}
setwd("C:/Users/dimitri/datasciencecoursera/RepData_PeerAssessment1")
data <- read.csv("activity/activity.csv", header = TRUE, colClasses = c("numeric", "Date","numeric"))
head(data)
```
### What is mean total number of steps taken per day?
```{r, echo=TRUE}
y <- complete.cases(data)
data2 <- data[y,]
x <- lapply((split(data2$steps,data2$date)),sum)
x <- as.numeric(x)
hist(x)
mean(x)
median(x)
```
### What is the average daily activity pattern?
```{r, echo=TRUE}
y <- data$interval[1:288]
x <- lapply((split(data2$steps,data2$interval)),mean)
x <- as.numeric(x)
plot(y,x, type = "l")
names(x) <- y
x[x==max(x)]
```
### Imputing missing values
```{r, echo=TRUE}
sum(is.na(data))
lapply((lapply((split(data$steps,data$date)),is.na)),sum)
X <- rep (x, 61)
for (i in 1:17568) {if (is.na(data[i,1]) == TRUE) {data[i,1] <- X[i]}}
z <- lapply((split(data$steps,data$date)),sum)
z <- as.numeric(z)
hist(z)
mean(z)
median(z)
```
### Are there differences in activity patterns between weekdays and weekends?
```{r, echo=TRUE}
h <- weekdays(data$date)
h <- factor(c("weekday","weekend"))
for (i in 1:17568) {if ((h[i] == "Sunday")|(h[i] == "Saturday")) {h[i] <- "weekend"} else {h[i] <- "weekday"}}
data <- cbind(data,h)
```
head(data)
names(data$h) <- day
names(data$h) <- "day"
head(data)
xyplot(datasteps ~ data$interval | data$h)
xyplot(data$steps ~ data$interval | data$h)
xyplot(data$steps ~ data$interval | data$h, data)
day <- weekdays(data$date)
day <- factor(c("weekday","weekend"))
day
xyplot(data$steps ~ data$interval | data$day, data, type = "l")
xyplot(data$steps ~ data$interval | data$day, data)
n <- lapply(split((split(data2$steps,data2$interval)),mean),g,mean)
n <- lapply(split((split(data2$steps,data2$interval)),mean)
)
x <- lapply((split(data2$steps,data2$interval)),mean)
x
x <- lapply((split(data2steps,data$interval,g)),mean)
x <- lapply((split(datasteps,data$interval,g)),mean)
x <- lapply((split(data$steps,data$interval,g)),mean)
x
g
x <- lapply((split(data$steps,data$interval,h)),mean)
x
head(data)
data
h
data[,4]
---
title: "PA1_template"
output: html_document
---
### Loading and preprocessing the data
We load the data and we give a class and a name to the columns.
```{r, echo=TRUE}
setwd("C:/Users/dimitri/datasciencecoursera/RepData_PeerAssessment1")
data <- read.csv("activity/activity.csv", header = TRUE, colClasses = c("numeric", "Date","numeric"))
head(data)
```
### What is mean total number of steps taken per day?
```{r, echo=TRUE}
y <- complete.cases(data)
data2 <- data[y,]
x <- lapply((split(data2$steps,data2$date)),sum)
x <- as.numeric(x)
hist(x)
mean(x)
median(x)
```
### What is the average daily activity pattern?
```{r, echo=TRUE}
y <- data$interval[1:288]
x <- lapply((split(data2$steps,data2$interval)),mean)
x <- as.numeric(x)
plot(y,x, type = "l")
names(x) <- y
x[x==max(x)]
```
### Imputing missing values
```{r, echo=TRUE}
sum(is.na(data))
lapply((lapply((split(data$steps,data$date)),is.na)),sum)
X <- rep (x, 61)
for (i in 1:17568) {if (is.na(data[i,1]) == TRUE) {data[i,1] <- X[i]}}
z <- lapply((split(data$steps,data$date)),sum)
z <- as.numeric(z)
hist(z)
mean(z)
median(z)
```
### Are there differences in activity patterns between weekdays and weekends?
```{r, echo=TRUE}
library(lattice)
day <- weekdays(data$date)
for (i in 1:17568) {if ((day[i] == "Sunday")|(day[i] == "Saturday")) {day[i] <- "weekend"} else {day[i] <- "weekday"}}
data <- cbind(data,day)
xyplot(data$steps ~ data$interval | data$day, data)
```
data[,4]
x <- lapply((split(data$steps,data$interval,day)),mean)
x
x <- lapply((split(data$steps,data$interval,data$day)),mean)
x
if (!file.exists("quizz")) {dir.create("quizz")}
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv "
download.file(fileUrl, destfile = ".quizz/quizz.csv")
download.file(fileUrl, destfile = "./quizz/quizz.csv")
quizz <- read.csv("quizz.csv")
quizz <- read.csv("./quizz/quizz.csv")
View(quizz)
agricultureLogical <- quizz[(quizz$ACR == 3) & (quizz$AGS == 6)]
agricultureLogical <- quizz[(quizz$ACR == 3) & (quizz$AGS == 6),]
agricultureLogical <- as.logical(agricultureLogical)
agricultureLogical
agricultureLogical <- quizz[(quizz$ACR == 3) & (quizz$AGS == 6),]
agricultureLogical
agricultureLogical <- ((quizz$ACR == 3) & (quizz$AGS == 6))
quizz[which(agricultureLogical),]
head(quizz[which(agricultureLogical),])
install.packages("jpeg")
library("jpeg", lib.loc="~/R/win-library/3.1")
quizz <- readJPEG(https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg, native= TRUE)
quizz <- readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", native= TRUE)
cd
pwd
pwd()
setwd("C:/Users/dimitri/datasciencecoursera")
quizz <- readJPEG("quizz.jpg", native= TRUE)
quantile(quizz,c(0.3,0.8))
if (!file.exists("quizz")) {dir.create("quizz")}
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
fileUrl2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileUrl, destfile = "./quizz/GDP.csv")
download.file(fileUrl2, destfile = "./quizz/educational.csv")
GDP <- read.csv("./quizz/GDP.csv")
educational <- read.csv("./quizz/educational.csv")
names(GDP)
names(educational)
View(GDP)
View(educational)
length(GDP[,1])
match(GDP[,1],educational[,1])
sum(match(GDP[,1],educational[,1]))
length(match(GDP[,1],educational[,1]))
sum(is.na(match(GDP[,1],educational[,1])))
b <- match(GDP[,1],educational[,1])
b<-as.factor(b)
levels(b)
mergedData = merge(educational,GDP,by.x="CountryCode",by.y="X")
head(mergedData)
View(mergedData)
mergedData = merge(educational,GDP,by.x="CountryCode",by.y="X",all=FALSE)
View(mergedData)
b <- match(educational[,1],GDP[,1])
B
b
sum(is.na(b))
View(mergedData)
mergedData = merge(educational,GDP[1:194,],by.x="CountryCode",by.y="X",all=FALSE)
View(mergedData)
mergedData[order(-mergeData[,32])]
mergedData[order(-mergedData[,32])]
mergedData[order(mergedData[,32])]
mergedData[order(mergedData$Gross.domestic.product.2012])]
mergedData[order(mergedData$Gross.domestic.product.2012)]
mergedData[order(mergedData$Gross.domestic.product.2012),]
mergedData <- mergedData[order(mergedData$Gross.domestic.product.2012),]
View(mergedData)
mergedData$Gross.domestic.product.2012 <- as.numeric(mergedData$Gross.domestic.product.2012)
mergedData <- mergedData[order(mergedData$Gross.domestic.product.2012),]
View(mergedData)
mergedData <- mergedData[order(-(mergedData$Gross.domestic.product.2012)),]
View(mergedData)
mergedData = merge(educational,GDP[1:194,],by.x="CountryCode",by.y="X",all=FALSE)
View(mergedData)
mergedData <- mergedData[order(-(mergedData$Gross.domestic.product.2012)),]
mergedData$Gross.domestic.product.2012 <- as.numeric(mergedData$Gross.domestic.product.2012)
mergedData <- mergedData[order(-(mergedData$Gross.domestic.product.2012)),]
View(mergedData)
mergedData = merge(educational,GDP[1:194,],by.x="CountryCode",by.y="X",all=FALSE)
View(mergedData)
lapply(split(mergedData$Gross.domestic.product.2012,mergeData$Income.Group),mean)
lapply(split(mergedData$Gross.domestic.product.2012,mergedData$Income.Group),mean)
mergedData$Gross.domestic.product.2012 <- as.numeric(mergedData$Gross.domestic.product.2012)
lapply(split(mergedData$Gross.domestic.product.2012,mergedData$Income.Group),mean)
mergedData <- mergedData[order(-(mergedData$Gross.domestic.product.2012)),]
View(mergedData)
mergedData = merge(educational,GDP[1:194,],by.x="CountryCode",by.y="X",all=FALSE)
View(mergedData)
names(mergedData)
mergedData <- mergedData[order(-(mergedData$Gross.domestic.product.2012)),]
mergedData$Gross.domestic.product.2012 <- as.numeric(mergedData$Gross.domestic.product.2012)
mergedData <- mergedData[order(-(mergedData$Gross.domestic.product.2012)),]
head(mergedData)
View(mergedData)
mergedData = merge(educational,GDP[1:194,],by.x="CountryCode",by.y="X",all=FALSE)
View(mergedData)
datatest <- mergedData[c(2,3,32),]
View(datatest)
datatest <- mergedData[,c(2,3,32)]
View(datatest)
lapply(split(datatest[,3],datatest[,2]),mean)
datatest[,3] <- as.numeric(datatest[,3])
lapply(split(datatest[,3],datatest[,2]),mean)
mergedData = merge(educational,GDP[1:194,],by.x="CountryCode",by.y="X",all=FALSE)
View(mergedData)
datatest[,3] <- as.numeric(datatest[,3])
View(datatest)
View(datatest)
datatest[,1] <- as.character(datatest[,1])
datatest[,2] <- as.character(datatest[,2])
lapply(split(datatest[,3],datatest[,2]),mean)
View(datatest)
GDP <- read.csv("./quizz/GDP.csv", colClasses = "character")
educational <- read.csv("./quizz/educational
GDP <- read.csv("./quizz/GDP.csv", colClasses = "character")
educational <- read.csv("./quizz/educational.csv", colClasses = "character")
mergedData = merge(educational,GDP[1:194,],by.x="CountryCode",by.y="X",all=FALSE)
datatest <- mergedData[,c(2,3,32)]
datatest[,3] <- as.numeric(datatest[,3])
lapply(split(datatest[,3],datatest[,2]),mean)
View(GDP)
View(GDP)
lapply(GDP[,5],sub(",",""))
lapply(GDP[,5],sub(",","",GDP[,5]))
sub(",","",GDP[,5])
gsub(",","",GDP[,5])
GDP[,5] <- gsub(",","",GDP[,5])
lapply(GDP[,5],sub(",","",GDP[,5]))
mean(GDP[5:194,5])
GDP[,5] <- as.numeric(GDP[,5])
mean(GDP[5:194,5])
View(mergedData)
grep("june",mergeData$Special.Notes)
grep("june",mergedData$Special.Notes)
grep("June",mergedData$Special.Notes)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
View(amzn)
amzn[,1] <- as.Date(amzn[,1])
amzn[,1]
amzn$row.names
names(amzn)
amzn[1,]
names(amzn[1,])
row.names(amzn)
row.names(amzn[,1])
rownames(amzn)
head(amzn)
index(amzn)
class(index(amzn))
index(amzn) %in% c("2012-01-01","2012-12-31")
sum(index(amzn) %in% c("2012-01-01","2012-12-31"))
sum(index(amzn) %in% c("2012-01-01":"2012-12-31"))
sum(index(amzn) %in% ("2012-01-01":"2012-12-31"))
sum(year(index(amzn) == 2012))
sum(year(index(amzn) == "^2012"))
sum((index(amzn) == "^2012"))
sum((grep(index(amzn),"^2012"))
)
grep(index(amzn),"^2012")
grep("^2012",index(amzn))
sum(grep("^2012",index(amzn)))
grep("June",mergedData$Special.Notes)
mergedData$Special.Notes[grep("June",mergedData$Special.Notes)]
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileUrl, destfile = "./quizz/quizz.csv")
quizz <- read.csv("./quizz/quizz.csv")
strsplit(names(quizz),"wgpt")
View(quizz)
View(quizz)
names(quizz)[123]
strsplit(names(quizz),"wgpt")
strsplit(names(quizz),"wgtp")
