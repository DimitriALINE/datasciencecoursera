getwd()
install.packages("swirl")
library(swirl)
swirl()
5+7
X<- 5+7
x <- 5 + 7
x
y <- x-3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
MY8DIV
my_div
c(1,2,3,4) + C(0,10)
c(1, 2, 3, 4) + C(0, 10)
c(1, 2, 3, 4) + C(0, 10)
r <- c(1, 2, 3, 4)
t <- c(0, 10)
r+t
c(1,2,3,4) + c(0, 10)
c(1,2,3,4) + c(0, 10,100)
z * 2 + 1000
my_div
my_vector <- vector(1:20)
main()
1:20
pi:10
15:1
?':'
seq(1,20)
seq(0,10,by=0.5)
seq(5,10, length=30)
my_seq <- seq(5,10,length=30)
length(my_seq)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0,1,2),times = 10)
rep(c(0,1,2), each = 10)
2
MAIN5°
main()
x <- c(O.5,55,-10,6)
x <- c(0.5,55,-10,6)
?vector
vector( 0.5, 55, -10, 6)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My","name","is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "dimitri")
my_name
paste(my_name," ")
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y","Z"), sep = " ")
paste(1:3, c("X", "Y","Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x<-c(44, NA, 5, NA)
X*3
X * 3
x <- c(44, NA, 5, NA)
X * 3
x * 3
y <- rnorm (1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
inf - inf
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
Y
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
c(x[3],x[5],x``)
c(x[3],x[5],x[7])
x[c(3, 5, 7)]
x[0]
X[3000]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2)
names(vect2) <- c("foo", "bar", "norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- c(1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix()
?matrix
matrix(data = NA, nrow = 4, ncol = 5, byrow = FALSE,
dimnames = NULL)
matrix(data = 1:20, nrow = 4, ncol = 5, byrow = FALSE,
dimnames = NULL)
matrix(data = 1:20, nrow = 4, ncol = 5)
matrix(1:20, 1,1)
matrix(1:20, 4,5)
matrix(1:20, 5,4)
my_matrix2 <- matrix(1:20, 5,4)
my_matrix2 <- matrix(1:20,4,5)
identical (my_matrix,my_matrix2)
patients <- c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cmanes <- c("patient", "age", "weight", "bp", "rating", "test")
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames <- cnames
colnames(my_data) <- cnames
my_data
EXIT5°
exit()
main()
ju
install.packages('RMySQL',type='source')
install.packages('RMySQL',type='source')
Sys.getenv('MYSQL_HOME')
install.packages("sqldf")
acs <- dbConnect(MySQL(), host="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
library(sqldf)
acs <- dbConnect(MySQL(), host="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
library(MySQL)
library(RMySQL)
storm <- read.table("repdata-data-StormData.csv.bz2", sep = ",", header=TRUE)
setwd("C:/Users/dimitri/datasciencecoursera/ReproducibleResearch")
storm <- read.table("repdata-data-StormData.csv.bz2", sep = ",", header=TRUE)
library(dplyr)
storm <- select(storm,EVTYPE,FATALITIES,INJURIES,PROPDMG,PROPDMGEXP,CROPDMG,CROPDMGEXP)
storm$EVTYPE <- tolower(storm$EVTYPE)
library(stringr)
storm$EVTYPE <-str_trim(storm$EVTYPE)
k <- storm$EVTYPE
x <- grep(("avalanche"),k, value = TRUE)
x <- grep(("volcan"),storm$EVTYPE, value = TRUE)
x
x <- grep(("avalanche"),k)
x <- grep(("volcan"),storm$EVTYPE)
for (i in x) {storm$EVTYPE[i] <- "volcanic ash"}
storm$EVTYPE <- as.factor(storm$EVTYPE)
storm$EVTYPE <- tolower(storm$EVTYPE)
library(stringr)
storm$EVTYPE <-str_trim(storm$EVTYPE)
x <- grep(("avalanche"),storm$EVTYPE)
for (i in x) {storm$EVTYPE[i] <- "avalanche"}
x <- grep(("volcan"),storm$EVTYPE)
for (i in x) {storm$EVTYPE[i] <- "volcanic ash"}
x <- grep(("surf|tsunami|seiche|rip|surge"),storm$EVTYPE)
for (i in x) {storm$EVTYPE[i] <- "sea wave and current"}
x <- grep(("drought|heat|dry|fire|dust devil"),storm$EVTYPE)
for (i in x) {storm$EVTYPE[i] <- "heat and dryness"}
x <- grep(("winter storm|snow|blizzard|ice storm|sleet|fog"),storm$EVTYPE)
for (i in x) {storm$EVTYPE[i] <- "winter storm and snow"}
x <- grep(("cold|ice|freez|frozen|frost|winter weather|chill"),storm$EVTYPE)
for (i in x) {storm$EVTYPE[i] <- "winter weather"}
x <- grep(("flood|rain"),storm$EVTYPE)
for (i in x) {storm$EVTYPE[i] <- "flood and heavy rain"}
x <- grep(("hail"),storm$EVTYPE)
for (i in x) {storm$EVTYPE[i] <- "hail"}
x <- grep(("tornado|waterspout|funnel cloud"),storm$EVTYPE)
for (i in x) {storm$EVTYPE[i] <- "tornado"}
x <- grep(("hurricane|tropical"),storm$EVTYPE)
for (i in x) {storm$EVTYPE[i] <- "hurricane"}
x <- grep(("thunderstorm|tstm|lightning"),storm$EVTYPE)
for (i in x) {storm$EVTYPE[i] <- "thunderstorm"}
x <- grep(("wind|storm"),storm$EVTYPE)
for (i in x) {storm$EVTYPE[i] <- "other wind storm"}
storm$EVTYPE <- as.factor(storm$EVTYPE)
sort(table(storm$EVTYPE),decreasing = TRUE)
